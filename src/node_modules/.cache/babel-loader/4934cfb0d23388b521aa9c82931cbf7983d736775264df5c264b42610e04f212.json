{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LB\\\\Documents\\\\src\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GameBoard from './components/GameBoard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showMenu, setShowMenu] = useState(true);\n  const [key, setKey] = useState(0); // to force remount GameBoard for restart\n\n  const handleStartGame = () => {\n    setShowMenu(false);\n    setKey(prev => prev + 1); // reset game by remounting GameBoard\n  };\n  const handleRestartGame = () => {\n    setKey(prev => prev + 1); // reset game by remounting GameBoard\n  };\n  const handleShowMenu = () => {\n    setShowMenu(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: showMenu ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dynamic Base Capture Card Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu-button\",\n        onClick: handleShowMenu,\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n        onRestart: handleRestartGame\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qSeJq47e9PLjd/MtI4SoESMHr0o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GameBoard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showMenu","setShowMenu","key","setKey","handleStartGame","prev","handleRestartGame","handleShowMenu","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onRestart","_c","$RefreshReg$"],"sources":["C:/Users/LB/Documents/src/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport GameBoard from './components/GameBoard';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [showMenu, setShowMenu] = useState(true);\r\n  const [key, setKey] = useState(0); // to force remount GameBoard for restart\r\n\r\n  const handleStartGame = () => {\r\n    setShowMenu(false);\r\n    setKey((prev) => prev + 1); // reset game by remounting GameBoard\r\n  };\r\n\r\n  const handleRestartGame = () => {\r\n    setKey((prev) => prev + 1); // reset game by remounting GameBoard\r\n  };\r\n\r\n  const handleShowMenu = () => {\r\n    setShowMenu(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {showMenu ? (\r\n        <div className=\"game-menu\">\r\n          <h1>Dynamic Base Capture Card Game</h1>\r\n          <button onClick={handleStartGame}>Start Game</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <button className=\"menu-button\" onClick={handleShowMenu}>Menu</button>\r\n          <GameBoard key={key} onRestart={handleRestartGame} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAE9C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnC,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5BH,WAAW,CAAC,KAAK,CAAC;IAClBE,MAAM,CAAEE,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,MAAM,CAAEE,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3BN,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEN,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBT,QAAQ,gBACPL,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBd,OAAA;QAAAc,QAAA,EAAI;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvClB,OAAA;QAAQmB,OAAO,EAAEV,eAAgB;QAAAK,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,gBAENlB,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACEd,OAAA;QAAQa,SAAS,EAAC,aAAa;QAACM,OAAO,EAAEP,cAAe;QAAAE,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtElB,OAAA,CAACF,SAAS;QAAWsB,SAAS,EAAET;MAAkB,GAAlCJ,GAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiC,CAAC;IAAA,eACrD;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CAhCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}