{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LB\\\\Desktop\\\\Linda Baloyi\\\\casino\\\\src\\\\src\\\\components\\\\GameBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PlayerHand from './PlayerHand';\nimport TableCards from './TableCards';\nimport { initializeGame, handleDrop, handleBuild, handleCapture, isRoundOver, isGameOver, calculateScores, findValidCaptures, findValidBuilds } from './game-logic';\nimport CapturedCards from './CapturedCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameBoard({\n  onRestart\n}) {\n  _s();\n  const [gameState, setGameState] = useState(initializeGame());\n  const handleDropCard = (card, player) => {\n    if (player !== gameState.currentPlayer) {\n      console.log(\"It's not your turn!\");\n      return;\n    }\n    let newGameState = {\n      ...gameState\n    };\n    let actionTaken = false;\n\n    // 1. Check for Capture\n    const possibleCaptures = findValidCaptures(card, gameState.tableCards);\n    if (possibleCaptures.length > 0) {\n      // For simplicity, take the first valid capture. In a real game, the player might choose.\n      newGameState = handleCapture(gameState, card, possibleCaptures[0]);\n      actionTaken = true;\n    }\n\n    // 2. Check for Build (if no capture was made)\n    if (!actionTaken) {\n      const possibleBuilds = findValidBuilds(card, gameState.tableCards);\n      if (possibleBuilds.length > 0) {\n        // For simplicity, take the first valid build. In a real game, the player might choose.\n        newGameState = handleBuild(gameState, card, possibleBuilds[0]);\n        actionTaken = true;\n      }\n    }\n\n    // 3. Default to Drop (if no capture or build was made)\n    if (!actionTaken) {\n      newGameState = handleDrop(gameState, card);\n    }\n    setGameState(newGameState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Round: \", gameState.round]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Player: Player \", gameState.currentPlayer + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Scores: Player 1 (\", gameState.scores[0], \") - Player 2 (\", gameState.scores[1], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"captured-cards-section\",\n      children: gameState.playerCaptures.map((capturedCards, index) => /*#__PURE__*/_jsxDEV(CapturedCards, {\n        player: index,\n        cards: capturedCards\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cards-section\",\n      children: /*#__PURE__*/_jsxDEV(TableCards, {\n        cards: gameState.tableCards,\n        onDropCard: handleDropCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-hands-section\",\n      children: gameState.playerHands.map((hand, index) => /*#__PURE__*/_jsxDEV(PlayerHand, {\n        player: index,\n        cards: hand,\n        isCurrent: gameState.currentPlayer === index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)).filter(playerHand => playerHand.props.isCurrent)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), gameState.gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Winner: Player \", gameState.winner + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRestart,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"ENK1g+vCzDU5cKkJDqhdquQtLoU=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","PlayerHand","TableCards","initializeGame","handleDrop","handleBuild","handleCapture","isRoundOver","isGameOver","calculateScores","findValidCaptures","findValidBuilds","CapturedCards","jsxDEV","_jsxDEV","GameBoard","onRestart","_s","gameState","setGameState","handleDropCard","card","player","currentPlayer","console","log","newGameState","actionTaken","possibleCaptures","tableCards","length","possibleBuilds","className","children","round","fileName","_jsxFileName","lineNumber","columnNumber","scores","playerCaptures","map","capturedCards","index","cards","onDropCard","playerHands","hand","isCurrent","filter","playerHand","props","gameOver","winner","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LB/Desktop/Linda Baloyi/casino/src/src/components/GameBoard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PlayerHand from './PlayerHand';\nimport TableCards from './TableCards';\n\nimport {\n  initializeGame,\n  handleDrop,\n  handleBuild,\n  handleCapture,\n  isRoundOver,\n  isGameOver,\n  calculateScores,\n  findValidCaptures,\n  findValidBuilds,\n} from './game-logic';\nimport CapturedCards from './CapturedCards';\n\nfunction GameBoard({ onRestart }) {\n  const [gameState, setGameState] = useState(initializeGame());\n\n  const handleDropCard = (card, player) => {\n    if (player !== gameState.currentPlayer) {\n      console.log(\"It's not your turn!\");\n      return;\n    }\n\n    let newGameState = { ...gameState };\n    let actionTaken = false;\n\n    // 1. Check for Capture\n    const possibleCaptures = findValidCaptures(card, gameState.tableCards);\n    if (possibleCaptures.length > 0) {\n      // For simplicity, take the first valid capture. In a real game, the player might choose.\n      newGameState = handleCapture(gameState, card, possibleCaptures[0]);\n      actionTaken = true;\n    }\n\n    // 2. Check for Build (if no capture was made)\n    if (!actionTaken) {\n      const possibleBuilds = findValidBuilds(card, gameState.tableCards);\n      if (possibleBuilds.length > 0) {\n        // For simplicity, take the first valid build. In a real game, the player might choose.\n        newGameState = handleBuild(gameState, card, possibleBuilds[0]);\n        actionTaken = true;\n      }\n    }\n\n    // 3. Default to Drop (if no capture or build was made)\n    if (!actionTaken) {\n      newGameState = handleDrop(gameState, card);\n    }\n\n    setGameState(newGameState);\n  };\n\n  return (\n    <div className=\"game-board\">\n      <div className=\"status-section\">\n        <p>Round: {gameState.round}</p>\n        <p>Current Player: Player {gameState.currentPlayer + 1}</p>\n        <p>Scores: Player 1 ({gameState.scores[0]}) - Player 2 ({gameState.scores[1]})</p>\n      </div>\n      <div className=\"captured-cards-section\">\n        {gameState.playerCaptures.map((capturedCards, index) => (\n          <CapturedCards key={index} player={index} cards={capturedCards} />\n        ))}\n      </div>\n      <div className=\"table-cards-section\">\n        <TableCards\n          cards={gameState.tableCards}\n          onDropCard={handleDropCard}\n        />\n      </div>\n      <div className=\"player-hands-section\">\n        {gameState.playerHands.map((hand, index) => (\n          <PlayerHand\n            key={index}\n            player={index}\n            cards={hand}\n            isCurrent={gameState.currentPlayer === index}\n          />\n        ))\n        .filter(playerHand => playerHand.props.isCurrent)}\n      </div>\n      {gameState.gameOver && (\n        <div className=\"game-over-section\">\n          <h2>Game Over</h2>\n          <p>Winner: Player {gameState.winner + 1}</p>\n          <button onClick={onRestart}>Play Again</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GameBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}