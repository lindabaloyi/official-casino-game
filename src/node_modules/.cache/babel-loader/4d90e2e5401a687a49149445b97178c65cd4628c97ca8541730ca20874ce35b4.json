{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LB\\\\Documents\\\\src\\\\src\\\\components\\\\TableCards.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TableCards({\n  cards,\n  onDragStart,\n  selectedTableCards,\n  onSelectTableCard,\n  selectedBuild,\n  onSelectBuild\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Table Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      style: {\n        position: 'relative',\n        width: 'auto',\n        height: '120px',\n        display: 'flex',\n        gap: '10px'\n      },\n      children: [cards.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No cards on table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 32\n      }, this), cards.map((card, index) => {\n        if (card.type === 'build' || card.type === 'stack') {\n          // Render only top card of stack/build\n          const topCard = card.cards[0]; // Smallest card is on top\n          const isSelected = selectedBuild && selectedBuild.buildValue === card.buildValue && selectedBuild.owner === card.owner;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card ${isSelected ? 'selected' : ''}`,\n            onClick: () => onSelectBuild(card),\n            style: {\n              cursor: 'pointer',\n              color: ['♥', '♦'].includes(topCard.suit) ? 'red' : 'black',\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-rank\",\n              children: topCard.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-suit\",\n              children: topCard.suit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), card.buildValue && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '-15px',\n                right: '0',\n                backgroundColor: 'yellow',\n                border: '1px solid black',\n                borderRadius: '4px',\n                padding: '2px 5px',\n                fontWeight: 'bold',\n                fontSize: '12px',\n                userSelect: 'none'\n              },\n              children: card.buildValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this);\n        } else {\n          // Loose card\n          const isSelected = selectedTableCards.some(c => c.rank === card.rank && c.suit === card.suit);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card ${isSelected ? 'selected' : ''}`,\n            draggable: true,\n            onDragStart: e => {\n              e.dataTransfer.setData('text/plain', JSON.stringify(card));\n              onDragStart(card);\n            },\n            onClick: () => onSelectTableCard(card),\n            style: {\n              cursor: 'pointer',\n              color: ['♥', '♦'].includes(card.suit) ? 'red' : 'black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-rank\",\n              children: card.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-suit\",\n              children: card.suit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = TableCards;\nexport default TableCards;\nvar _c;\n$RefreshReg$(_c, \"TableCards\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TableCards","cards","onDragStart","selectedTableCards","onSelectTableCard","selectedBuild","onSelectBuild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","width","height","display","gap","length","map","card","index","type","topCard","isSelected","buildValue","owner","onClick","cursor","color","includes","suit","rank","top","right","backgroundColor","border","borderRadius","padding","fontWeight","fontSize","userSelect","some","c","draggable","e","dataTransfer","setData","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/LB/Documents/src/src/components/TableCards.js"],"sourcesContent":["import React from 'react';\n\nfunction TableCards({ cards, onDragStart, selectedTableCards, onSelectTableCard, selectedBuild, onSelectBuild }) {\n  return (\n    <div className=\"table-cards\">\n      <h3>Table Cards</h3>\n      <div className=\"cards-container\" style={{ position: 'relative', width: 'auto', height: '120px', display: 'flex', gap: '10px' }}>\n        {cards.length === 0 && <p>No cards on table</p>}\n        {cards.map((card, index) => {\n          if (card.type === 'build' || card.type === 'stack') {\n            // Render only top card of stack/build\n            const topCard = card.cards[0]; // Smallest card is on top\n            const isSelected = selectedBuild && selectedBuild.buildValue === card.buildValue && selectedBuild.owner === card.owner;\n\n            return (\n              <div\n                key={index}\n                className={`card ${isSelected ? 'selected' : ''}`}\n                onClick={() => onSelectBuild(card)}\n                style={{\n                  cursor: 'pointer',\n                  color: ['♥', '♦'].includes(topCard.suit) ? 'red' : 'black',\n                  position: 'relative',\n                }}\n              >\n                <div className=\"card-rank\">{topCard.rank}</div>\n                <div className=\"card-suit\">{topCard.suit}</div>\n                {card.buildValue && (\n                  <div\n                    style={{\n                      position: 'absolute',\n                      top: '-15px',\n                      right: '0',\n                      backgroundColor: 'yellow',\n                      border: '1px solid black',\n                      borderRadius: '4px',\n                      padding: '2px 5px',\n                      fontWeight: 'bold',\n                      fontSize: '12px',\n                      userSelect: 'none',\n                    }}\n                  >\n                    {card.buildValue}\n                  </div>\n                )}\n              </div>\n            );\n          } else {\n            // Loose card\n            const isSelected = selectedTableCards.some(\n                (c) => c.rank === card.rank && c.suit === card.suit\n            );\n            return (\n              <div\n                key={index}\n                className={`card ${isSelected ? 'selected' : ''}`}\n                draggable\n                onDragStart={(e) => {\n                  e.dataTransfer.setData('text/plain', JSON.stringify(card));\n                  onDragStart(card);\n                }}\n                onClick={() => onSelectTableCard(card)}\n                style={{\n                  cursor: 'pointer',\n                  color: ['♥', '♦'].includes(card.suit) ? 'red' : 'black',\n                }}\n              >\n                <div className=\"card-rank\">{card.rank}</div>\n                <div className=\"card-suit\">{card.suit}</div>\n              </div>\n            );\n          }\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default TableCards;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}