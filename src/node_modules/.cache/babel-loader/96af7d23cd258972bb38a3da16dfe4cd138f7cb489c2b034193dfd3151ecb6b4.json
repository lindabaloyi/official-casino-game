{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LB\\\\Desktop\\\\Linda Baloyi\\\\casino\\\\src\\\\src\\\\components\\\\GameBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PlayerHand from './PlayerHand';\nimport TableCards from './TableCards';\nimport { initializeGame, handleDrop, handleBuild, handleCapture, isRoundOver, isGameOver, calculateScores, findValidCaptures, findValidBuilds } from './game-logic';\nimport CapturedCards from './CapturedCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameBoard({\n  onRestart\n}) {\n  _s();\n  const [gameState, setGameState] = useState(initializeGame());\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [possibleCaptures, setPossibleCaptures] = React.useState([]);\n  const [possibleBuilds, setPossibleBuilds] = React.useState([]);\n  const [actionChoice, setActionChoice] = React.useState(null);\n  const resetActionState = () => {\n    setSelectedCard(null);\n    setPossibleCaptures([]);\n    setPossibleBuilds([]);\n    setActionChoice(null);\n  };\n  const handleCardPlay = (card, player) => {\n    if (player !== gameState.currentPlayer) {\n      console.log(\"It's not your turn!\");\n      return;\n    }\n    setSelectedCard(card);\n    const captures = findValidCaptures(card, gameState.tableCards);\n    const builds = findValidBuilds(card, gameState.tableCards);\n    setPossibleCaptures(captures);\n    setPossibleBuilds(builds);\n    if (captures.length === 0 && builds.length === 0) {\n      // No capture or build possible, default to drop\n      const newGameState = handleDrop(gameState, card);\n      setGameState(newGameState);\n      resetActionState();\n    }\n  };\n  const handleAction = action => {\n    if (!selectedCard) return;\n    let newGameState = {\n      ...gameState\n    };\n    if (action === 'capture' && possibleCaptures.length > 0) {\n      // For simplicity, take the first valid capture\n      newGameState = handleCapture(gameState, selectedCard, possibleCaptures[0]);\n    } else if (action === 'build' && possibleBuilds.length > 0) {\n      // For simplicity, take the first valid build\n      newGameState = handleBuild(gameState, selectedCard, possibleBuilds[0]);\n    } else if (action === 'drop') {\n      newGameState = handleDrop(gameState, selectedCard);\n    }\n    setGameState(newGameState);\n    resetActionState();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Round: \", gameState.round]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Player: Player \", gameState.currentPlayer + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Scores: Player 1 (\", gameState.scores[0], \") - Player 2 (\", gameState.scores[1], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"captured-cards-section\",\n      children: gameState.playerCaptures.map((capturedCards, index) => /*#__PURE__*/_jsxDEV(CapturedCards, {\n        player: index,\n        cards: capturedCards\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cards-section\",\n      children: /*#__PURE__*/_jsxDEV(TableCards, {\n        cards: gameState.tableCards,\n        onDropCard: handleCardPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-hands-section\",\n      children: gameState.playerHands.map((hand, index) => /*#__PURE__*/_jsxDEV(PlayerHand, {\n        player: index,\n        cards: hand,\n        isCurrent: gameState.currentPlayer === index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)).filter(playerHand => playerHand.props.isCurrent)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), selectedCard && (possibleCaptures.length > 0 || possibleBuilds.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [possibleCaptures.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAction('capture'),\n        children: \"Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), possibleBuilds.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAction('build'),\n        children: \"Build\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAction('drop'),\n        children: \"Drop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), gameState.gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Winner: Player \", gameState.winner + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRestart,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"JT0xqhOVwpXkSpolnvpLpY1f3aw=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","PlayerHand","TableCards","initializeGame","handleDrop","handleBuild","handleCapture","isRoundOver","isGameOver","calculateScores","findValidCaptures","findValidBuilds","CapturedCards","jsxDEV","_jsxDEV","GameBoard","onRestart","_s","gameState","setGameState","selectedCard","setSelectedCard","possibleCaptures","setPossibleCaptures","possibleBuilds","setPossibleBuilds","actionChoice","setActionChoice","resetActionState","handleCardPlay","card","player","currentPlayer","console","log","captures","tableCards","builds","length","newGameState","handleAction","action","className","children","round","fileName","_jsxFileName","lineNumber","columnNumber","scores","playerCaptures","map","capturedCards","index","cards","onDropCard","playerHands","hand","isCurrent","filter","playerHand","props","onClick","gameOver","winner","_c","$RefreshReg$"],"sources":["C:/Users/LB/Desktop/Linda Baloyi/casino/src/src/components/GameBoard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PlayerHand from './PlayerHand';\nimport TableCards from './TableCards';\n\nimport {\n  initializeGame,\n  handleDrop,\n  handleBuild,\n  handleCapture,\n  isRoundOver,\n  isGameOver,\n  calculateScores,\n  findValidCaptures,\n  findValidBuilds,\n} from './game-logic';\nimport CapturedCards from './CapturedCards';\n\nfunction GameBoard({ onRestart }) {\n  const [gameState, setGameState] = useState(initializeGame());\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [possibleCaptures, setPossibleCaptures] = React.useState([]);\n  const [possibleBuilds, setPossibleBuilds] = React.useState([]);\n  const [actionChoice, setActionChoice] = React.useState(null);\n\n  const resetActionState = () => {\n    setSelectedCard(null);\n    setPossibleCaptures([]);\n    setPossibleBuilds([]);\n    setActionChoice(null);\n  };\n\n  const handleCardPlay = (card, player) => {\n    if (player !== gameState.currentPlayer) {\n      console.log(\"It's not your turn!\");\n      return;\n    }\n\n    setSelectedCard(card);\n    const captures = findValidCaptures(card, gameState.tableCards);\n    const builds = findValidBuilds(card, gameState.tableCards);\n    setPossibleCaptures(captures);\n    setPossibleBuilds(builds);\n\n    if (captures.length === 0 && builds.length === 0) {\n      // No capture or build possible, default to drop\n      const newGameState = handleDrop(gameState, card);\n      setGameState(newGameState);\n      resetActionState();\n    }\n  };\n\n  const handleAction = (action) => {\n    if (!selectedCard) return;\n\n    let newGameState = { ...gameState };\n\n    if (action === 'capture' && possibleCaptures.length > 0) {\n      // For simplicity, take the first valid capture\n      newGameState = handleCapture(gameState, selectedCard, possibleCaptures[0]);\n    } else if (action === 'build' && possibleBuilds.length > 0) {\n      // For simplicity, take the first valid build\n      newGameState = handleBuild(gameState, selectedCard, possibleBuilds[0]);\n    } else if (action === 'drop') {\n      newGameState = handleDrop(gameState, selectedCard);\n    }\n\n    setGameState(newGameState);\n    resetActionState();\n  };\n\n  return (\n    <div className=\"game-board\">\n      <div className=\"status-section\">\n        <p>Round: {gameState.round}</p>\n        <p>Current Player: Player {gameState.currentPlayer + 1}</p>\n        <p>Scores: Player 1 ({gameState.scores[0]}) - Player 2 ({gameState.scores[1]})</p>\n      </div>\n      <div className=\"captured-cards-section\">\n        {gameState.playerCaptures.map((capturedCards, index) => (\n          <CapturedCards key={index} player={index} cards={capturedCards} />\n        ))}\n      </div>\n      <div className=\"table-cards-section\">\n        <TableCards\n          cards={gameState.tableCards}\n          onDropCard={handleCardPlay}\n        />\n      </div>\n      <div className=\"player-hands-section\">\n        {gameState.playerHands.map((hand, index) => (\n          <PlayerHand\n            key={index}\n            player={index}\n            cards={hand}\n            isCurrent={gameState.currentPlayer === index}\n          />\n        ))\n        .filter(playerHand => playerHand.props.isCurrent)}\n      </div>\n      {selectedCard && (possibleCaptures.length > 0 || possibleBuilds.length > 0) && (\n        <div className=\"action-buttons\">\n          {possibleCaptures.length > 0 && (\n            <button onClick={() => handleAction('capture')}>Capture</button>\n          )}\n          {possibleBuilds.length > 0 && (\n            <button onClick={() => handleAction('build')}>Build</button>\n          )}\n          <button onClick={() => handleAction('drop')}>Drop</button>\n        </div>\n      )}\n      {gameState.gameOver && (\n        <div className=\"game-over-section\">\n          <h2>Game Over</h2>\n          <p>Winner: Player {gameState.winner + 1}</p>\n          <button onClick={onRestart}>Play Again</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GameBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}