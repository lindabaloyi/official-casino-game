{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LB\\\\Desktop\\\\Linda Baloyi\\\\casino\\\\src\\\\src\\\\components\\\\PlayerHand.js\";\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  CARD: 'card'\n};\nconst PlayerHand = ({\n  player,\n  cards,\n  isCurrent\n}) => {\n  var _s = $RefreshSig$();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `player-hand ${isCurrent ? 'current-player' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `Player ${player + 1} ${isCurrent ? '(Your Turn)' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: _s(cards.map(_s((card, index) => {\n        _s();\n        const [{\n          isDragging\n        }, drag] = useDrag(() => ({\n          type: ItemTypes.CARD,\n          item: {\n            card,\n            player\n          },\n          canDrag: isCurrent,\n          // Only current player can drag their cards\n          collect: monitor => ({\n            isDragging: monitor.isDragging()\n          })\n        }));\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: drag,\n          className: `card ${isDragging ? 'dragging' : ''}`,\n          style: {\n            opacity: isDragging ? 0.5 : 1\n          },\n          children: isCurrent ? `${card.rank}${card.suit}` : 'X'\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this);\n      }, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n        return [useDrag];\n      })), \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n        return [useDrag];\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = PlayerHand;\nexport default PlayerHand;\nvar _c;\n$RefreshReg$(_c, \"PlayerHand\");","map":{"version":3,"names":["React","useDrag","jsxDEV","_jsxDEV","ItemTypes","CARD","PlayerHand","player","cards","isCurrent","_s","$RefreshSig$","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","isDragging","drag","type","item","canDrag","collect","monitor","ref","style","opacity","rank","suit","_c","$RefreshReg$"],"sources":["C:/Users/LB/Desktop/Linda Baloyi/casino/src/src/components/PlayerHand.js"],"sourcesContent":["import React from 'react';\nimport { useDrag } from 'react-dnd';\n\nconst ItemTypes = {\n  CARD: 'card',\n};\n\nconst PlayerHand = ({ player, cards, isCurrent }) => {\n  return (\n    <div className={`player-hand ${isCurrent ? 'current-player' : ''}`}>\n      <h3>{`Player ${player + 1} ${isCurrent ? '(Your Turn)' : ''}`}</h3>\n      <div className=\"cards-container\">\n        {cards.map((card, index) => {\n          const [{ isDragging }, drag] = useDrag(() => ({\n            type: ItemTypes.CARD,\n            item: { card, player },\n            canDrag: isCurrent, // Only current player can drag their cards\n            collect: (monitor) => ({\n              isDragging: monitor.isDragging(),\n            }),\n          }));\n\n          return (\n            <div\n              key={index}\n              ref={drag}\n              className={`card ${isDragging ? 'dragging' : ''}`}\n              style={{ opacity: isDragging ? 0.5 : 1 }}\n            >\n              {isCurrent ? `${card.rank}${card.suit}` : 'X'}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerHand;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAG;EAChBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC;AAAU,CAAC,KAAK;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACnD,oBACER,OAAA;IAAKS,SAAS,EAAE,eAAeH,SAAS,GAAG,gBAAgB,GAAG,EAAE,EAAG;IAAAI,QAAA,gBACjEV,OAAA;MAAAU,QAAA,EAAK,UAAUN,MAAM,GAAG,CAAC,IAAIE,SAAS,GAAG,aAAa,GAAG,EAAE;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnEd,OAAA;MAAKS,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAAH,EAAA,CAC7BF,KAAK,CAACU,GAAG,CAAAR,EAAA,CAAC,CAACS,IAAI,EAAEC,KAAK,KAAK;QAAAV,EAAA;QAC1B,MAAM,CAAC;UAAEW;QAAW,CAAC,EAAEC,IAAI,CAAC,GAAGrB,OAAO,CAAC,OAAO;UAC5CsB,IAAI,EAAEnB,SAAS,CAACC,IAAI;UACpBmB,IAAI,EAAE;YAAEL,IAAI;YAAEZ;UAAO,CAAC;UACtBkB,OAAO,EAAEhB,SAAS;UAAE;UACpBiB,OAAO,EAAGC,OAAO,KAAM;YACrBN,UAAU,EAAEM,OAAO,CAACN,UAAU,CAAC;UACjC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,oBACElB,OAAA;UAEEyB,GAAG,EAAEN,IAAK;UACVV,SAAS,EAAE,QAAQS,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;UAClDQ,KAAK,EAAE;YAAEC,OAAO,EAAET,UAAU,GAAG,GAAG,GAAG;UAAE,CAAE;UAAAR,QAAA,EAExCJ,SAAS,GAAG,GAAGU,IAAI,CAACY,IAAI,GAAGZ,IAAI,CAACa,IAAI,EAAE,GAAG;QAAG,GALxCZ,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMP,CAAC;MAEV,CAAC;QAAA,QAnBgChB,OAAO;MAAA,EAmBvC,CAAC;QAAA,QAnB+BA,OAAO;MAAA;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAoBrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACgB,EAAA,GA7BI3B,UAAU;AA+BhB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}