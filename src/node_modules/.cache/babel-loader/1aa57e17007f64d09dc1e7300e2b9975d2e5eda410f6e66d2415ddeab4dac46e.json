{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LB\\\\Desktop\\\\Linda Baloyi\\\\casino\\\\src\\\\src\\\\components\\\\PlayerHand.js\";\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  CARD: 'card'\n};\nconst PlayerHand = ({\n  player,\n  cards,\n  isCurrent,\n  onSelectCard,\n  selectedCard\n}) => {\n  var _s = $RefreshSig$();\n  return (\n    /*#__PURE__*/\n    // We always render both hands to avoid violating rules of hooks,\n    // but we use CSS to hide the non-active player's hand.\n    _jsxDEV(\"div\", {\n      className: `player-hand ${isCurrent ? 'current-player' : ''}`,\n      style: {\n        display: isCurrent ? 'block' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Player ${player + 1} ${isCurrent ? '(Your Turn)' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-container\",\n        children: _s(cards.map(_s((card, index) => {\n          _s();\n          const [{\n            isDragging\n          }, drag] = useDrag(() => ({\n            type: ItemTypes.CARD,\n            item: {\n              card,\n              player\n            },\n            canDrag: isCurrent,\n            // Only current player can drag their cards\n            collect: monitor => ({\n              isDragging: monitor.isDragging()\n            })\n          }));\n          const isSelected = selectedCard && card.rank === selectedCard.rank && card.suit === selectedCard.suit;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: drag,\n            style: {\n              opacity: isDragging ? 0.5 : 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              rank: card.rank,\n              suit: card.suit,\n              isSelected: isSelected,\n              onClick: () => {\n                if (isCurrent && typeof onSelectCard === 'function') {\n                  onSelectCard(card);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this);\n        }, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n          return [useDrag];\n        })), \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n          return [useDrag];\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = PlayerHand;\nexport default PlayerHand;\nvar _c;\n$RefreshReg$(_c, \"PlayerHand\");","map":{"version":3,"names":["React","useDrag","Card","jsxDEV","_jsxDEV","ItemTypes","CARD","PlayerHand","player","cards","isCurrent","onSelectCard","selectedCard","_s","$RefreshSig$","className","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","isDragging","drag","type","item","canDrag","collect","monitor","isSelected","rank","suit","ref","opacity","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LB/Desktop/Linda Baloyi/casino/src/src/components/PlayerHand.js"],"sourcesContent":["import React from 'react';\nimport { useDrag } from 'react-dnd';\nimport Card from './Card';\n\nconst ItemTypes = {\n  CARD: 'card',\n};\n\nconst PlayerHand = ({ player, cards, isCurrent, onSelectCard, selectedCard }) => {\n  return (\n    // We always render both hands to avoid violating rules of hooks,\n    // but we use CSS to hide the non-active player's hand.\n    <div\n      className={`player-hand ${isCurrent ? 'current-player' : ''}`}\n      style={{ display: isCurrent ? 'block' : 'none' }}\n    >\n      <h3>{`Player ${player + 1} ${isCurrent ? '(Your Turn)' : ''}`}</h3>\n      <div className=\"cards-container\">\n        {cards.map((card, index) => {\n          const [{ isDragging }, drag] = useDrag(() => ({\n            type: ItemTypes.CARD,\n            item: { card, player },\n            canDrag: isCurrent, // Only current player can drag their cards\n            collect: (monitor) => ({\n              isDragging: monitor.isDragging(),\n            }),\n          }));\n\n          const isSelected = selectedCard && card.rank === selectedCard.rank && card.suit === selectedCard.suit;\n\n          return (\n            <div\n              key={index}\n              ref={drag}\n              style={{ opacity: isDragging ? 0.5 : 1 }}\n            >\n              <Card\n                rank={card.rank}\n                suit={card.suit}\n                isSelected={isSelected}\n                onClick={() => {\n                  if (isCurrent && typeof onSelectCard === 'function') {\n                    onSelectCard(card);\n                  }\n                }}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerHand;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAG;EAChBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAa,CAAC,KAAK;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC/E;IAAA;IACE;IACA;IACAV,OAAA;MACEW,SAAS,EAAE,eAAeL,SAAS,GAAG,gBAAgB,GAAG,EAAE,EAAG;MAC9DM,KAAK,EAAE;QAAEC,OAAO,EAAEP,SAAS,GAAG,OAAO,GAAG;MAAO,CAAE;MAAAQ,QAAA,gBAEjDd,OAAA;QAAAc,QAAA,EAAK,UAAUV,MAAM,GAAG,CAAC,IAAIE,SAAS,GAAG,aAAa,GAAG,EAAE;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnElB,OAAA;QAAKW,SAAS,EAAC,iBAAiB;QAAAG,QAAA,EAAAL,EAAA,CAC7BJ,KAAK,CAACc,GAAG,CAAAV,EAAA,CAAC,CAACW,IAAI,EAAEC,KAAK,KAAK;UAAAZ,EAAA;UAC1B,MAAM,CAAC;YAAEa;UAAW,CAAC,EAAEC,IAAI,CAAC,GAAG1B,OAAO,CAAC,OAAO;YAC5C2B,IAAI,EAAEvB,SAAS,CAACC,IAAI;YACpBuB,IAAI,EAAE;cAAEL,IAAI;cAAEhB;YAAO,CAAC;YACtBsB,OAAO,EAAEpB,SAAS;YAAE;YACpBqB,OAAO,EAAGC,OAAO,KAAM;cACrBN,UAAU,EAAEM,OAAO,CAACN,UAAU,CAAC;YACjC,CAAC;UACH,CAAC,CAAC,CAAC;UAEH,MAAMO,UAAU,GAAGrB,YAAY,IAAIY,IAAI,CAACU,IAAI,KAAKtB,YAAY,CAACsB,IAAI,IAAIV,IAAI,CAACW,IAAI,KAAKvB,YAAY,CAACuB,IAAI;UAErG,oBACE/B,OAAA;YAEEgC,GAAG,EAAET,IAAK;YACVX,KAAK,EAAE;cAAEqB,OAAO,EAAEX,UAAU,GAAG,GAAG,GAAG;YAAE,CAAE;YAAAR,QAAA,eAEzCd,OAAA,CAACF,IAAI;cACHgC,IAAI,EAAEV,IAAI,CAACU,IAAK;cAChBC,IAAI,EAAEX,IAAI,CAACW,IAAK;cAChBF,UAAU,EAAEA,UAAW;cACvBK,OAAO,EAAEA,CAAA,KAAM;gBACb,IAAI5B,SAAS,IAAI,OAAOC,YAAY,KAAK,UAAU,EAAE;kBACnDA,YAAY,CAACa,IAAI,CAAC;gBACpB;cACF;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GAbGG,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcP,CAAC;QAEV,CAAC;UAAA,QA7BgCrB,OAAO;QAAA,EA6BvC,CAAC;UAAA,QA7B+BA,OAAO;QAAA;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8BrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEV,CAAC;AAACiB,EAAA,GA5CIhC,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}