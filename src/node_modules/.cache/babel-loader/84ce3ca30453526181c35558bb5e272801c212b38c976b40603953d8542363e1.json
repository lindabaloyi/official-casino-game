{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LB\\\\Desktop\\\\Linda Baloyi\\\\casino\\\\src\\\\src\\\\components\\\\CardStack.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  CARD: 'card'\n};\nconst rankValue = rank => {\n  if (rank === 'A') return 14;\n  if (rank === 'K') return 13;\n  if (rank === 'Q') return 12;\n  if (rank === 'J') return 11;\n  return parseInt(rank, 10);\n};\nconst CardStack = ({\n  cards,\n  onDropStack,\n  stackId\n}) => {\n  _s();\n  const [{\n    isOverStack\n  }, dropStack] = useDrop(() => ({\n    accept: ItemTypes.CARD,\n    drop: (item, monitor) => onDropStack(item, monitor.getClientOffset()),\n    collect: monitor => ({\n      isOverStack: monitor.isOver()\n    })\n  }));\n  const sortedCards = [...cards].sort((a, b) => rankValue(b.rank) - rankValue(a.rank));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dropStack,\n    style: {\n      position: 'relative',\n      width: '65px',\n      height: `${95 + (sortedCards.length - 1) * 20}px`,\n      margin: '0 5px',\n      backgroundColor: isOverStack ? 'rgba(173, 216, 230, 0.5)' : 'transparent',\n      borderRadius: '10px',\n      padding: '5px'\n    },\n    children: sortedCards.map((card, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: `${idx * 20}px`,\n        left: 0,\n        zIndex: idx\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        rank: card.rank,\n        suit: card.suit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, `${stackId}-${card.rank}-${card.suit}-${idx}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(CardStack, \"EOGBmnDWBvjSBuoHgyQTjXkgICI=\", false, function () {\n  return [useDrop];\n});\n_c = CardStack;\nexport default CardStack;\nvar _c;\n$RefreshReg$(_c, \"CardStack\");","map":{"version":3,"names":["React","useDrop","Card","jsxDEV","_jsxDEV","ItemTypes","CARD","rankValue","rank","parseInt","CardStack","cards","onDropStack","stackId","_s","isOverStack","dropStack","accept","drop","item","monitor","getClientOffset","collect","isOver","sortedCards","sort","a","b","ref","style","position","width","height","length","margin","backgroundColor","borderRadius","padding","children","map","card","idx","top","left","zIndex","suit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LB/Desktop/Linda Baloyi/casino/src/src/components/CardStack.js"],"sourcesContent":["import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport Card from './Card';\r\n\r\nconst ItemTypes = {\r\n  CARD: 'card',\r\n};\r\n\r\nconst rankValue = (rank) => {\r\n  if (rank === 'A') return 14;\r\n  if (rank === 'K') return 13;\r\n  if (rank === 'Q') return 12;\r\n  if (rank === 'J') return 11;\r\n  return parseInt(rank, 10);\r\n};\r\n\r\nconst CardStack = ({ cards, onDropStack, stackId }) => {\r\n  const [{ isOverStack }, dropStack] = useDrop(() => ({\r\n    accept: ItemTypes.CARD,\r\n    drop: (item, monitor) => onDropStack(item, monitor.getClientOffset()),\r\n    collect: (monitor) => ({\r\n      isOverStack: monitor.isOver(),\r\n    }),\r\n  }));\r\n\r\n  const sortedCards = [...cards].sort((a, b) => rankValue(b.rank) - rankValue(a.rank));\r\n\r\n  return (\r\n    <div\r\n      ref={dropStack}\r\n      style={{\r\n        position: 'relative',\r\n        width: '65px',\r\n        height: `${95 + (sortedCards.length - 1) * 20}px`,\r\n        margin: '0 5px',\r\n        backgroundColor: isOverStack ? 'rgba(173, 216, 230, 0.5)' : 'transparent',\r\n        borderRadius: '10px',\r\n        padding: '5px',\r\n      }}\r\n    >\r\n      {sortedCards.map((card, idx) => (\r\n        <div key={`${stackId}-${card.rank}-${card.suit}-${idx}`} style={{ position: 'absolute', top: `${idx * 20}px`, left: 0, zIndex: idx }}>\r\n          <Card rank={card.rank} suit={card.suit} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardStack;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAG;EAChBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,SAAS,GAAIC,IAAI,IAAK;EAC1B,IAAIA,IAAI,KAAK,GAAG,EAAE,OAAO,EAAE;EAC3B,IAAIA,IAAI,KAAK,GAAG,EAAE,OAAO,EAAE;EAC3B,IAAIA,IAAI,KAAK,GAAG,EAAE,OAAO,EAAE;EAC3B,IAAIA,IAAI,KAAK,GAAG,EAAE,OAAO,EAAE;EAC3B,OAAOC,QAAQ,CAACD,IAAI,EAAE,EAAE,CAAC;AAC3B,CAAC;AAED,MAAME,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC,WAAW;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAAC;IAAEC;EAAY,CAAC,EAAEC,SAAS,CAAC,GAAGf,OAAO,CAAC,OAAO;IAClDgB,MAAM,EAAEZ,SAAS,CAACC,IAAI;IACtBY,IAAI,EAAEA,CAACC,IAAI,EAAEC,OAAO,KAAKR,WAAW,CAACO,IAAI,EAAEC,OAAO,CAACC,eAAe,CAAC,CAAC,CAAC;IACrEC,OAAO,EAAGF,OAAO,KAAM;MACrBL,WAAW,EAAEK,OAAO,CAACG,MAAM,CAAC;IAC9B,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,MAAMC,WAAW,GAAG,CAAC,GAAGb,KAAK,CAAC,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKpB,SAAS,CAACoB,CAAC,CAACnB,IAAI,CAAC,GAAGD,SAAS,CAACmB,CAAC,CAAClB,IAAI,CAAC,CAAC;EAEpF,oBACEJ,OAAA;IACEwB,GAAG,EAAEZ,SAAU;IACfa,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,GAAG,EAAE,GAAG,CAACR,WAAW,CAACS,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI;MACjDC,MAAM,EAAE,OAAO;MACfC,eAAe,EAAEpB,WAAW,GAAG,0BAA0B,GAAG,aAAa;MACzEqB,YAAY,EAAE,MAAM;MACpBC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,EAEDd,WAAW,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACzBrC,OAAA;MAAyDyB,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEY,GAAG,EAAE,GAAGD,GAAG,GAAG,EAAE,IAAI;QAAEE,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAEH;MAAI,CAAE;MAAAH,QAAA,eACnIlC,OAAA,CAACF,IAAI;QAACM,IAAI,EAAEgC,IAAI,CAAChC,IAAK;QAACqC,IAAI,EAAEL,IAAI,CAACK;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADlC,GAAGpC,OAAO,IAAI2B,IAAI,CAAChC,IAAI,IAAIgC,IAAI,CAACK,IAAI,IAAIJ,GAAG,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElD,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnC,EAAA,CA/BIJ,SAAS;EAAA,QACwBT,OAAO;AAAA;AAAAiD,EAAA,GADxCxC,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}