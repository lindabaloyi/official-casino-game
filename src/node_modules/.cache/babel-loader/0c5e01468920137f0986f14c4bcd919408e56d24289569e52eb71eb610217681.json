{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LB\\\\Documents\\\\src\\\\src\\\\components\\\\DeckDisplay.js\";\nimport React from 'react';\nimport './DeckDisplay.css'; // For fan style CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeckDisplay({\n  deck\n}) {\n  // Calculate fan style positions dynamically for responsiveness\n  const maxFanAngle = 30; // degrees total spread\n  const cardCount = deck.length;\n  const centerIndex = (cardCount - 1) / 2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deck-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-cards\",\n      children: [cardCount === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No cards in deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 29\n      }, this), deck.map((card, index) => {\n        // Calculate rotation angle for each card\n        const angle = (index - centerIndex) / centerIndex * (maxFanAngle / 2);\n        // Calculate horizontal translation for each card\n        const translateX = (index - centerIndex) * 15;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deck-card\",\n          style: {\n            transform: `rotate(${angle}deg) translateX(${translateX}px)`\n          },\n          children: [card.rank, \" \", card.suit]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = DeckDisplay;\nexport default DeckDisplay;\nvar _c;\n$RefreshReg$(_c, \"DeckDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DeckDisplay","deck","maxFanAngle","cardCount","length","centerIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","angle","translateX","style","transform","rank","suit","_c","$RefreshReg$"],"sources":["C:/Users/LB/Documents/src/src/components/DeckDisplay.js"],"sourcesContent":["import React from 'react';\r\nimport './DeckDisplay.css'; // For fan style CSS\r\n\r\nfunction DeckDisplay({ deck }) {\r\n  // Calculate fan style positions dynamically for responsiveness\r\n  const maxFanAngle = 30; // degrees total spread\r\n  const cardCount = deck.length;\r\n  const centerIndex = (cardCount - 1) / 2;\r\n\r\n  return (\r\n    <div className=\"deck-display\">\r\n      <h3>Deck</h3>\r\n      <div className=\"deck-cards\">\r\n        {cardCount === 0 && <p>No cards in deck</p>}\r\n        {deck.map((card, index) => {\r\n          // Calculate rotation angle for each card\r\n          const angle = ((index - centerIndex) / centerIndex) * (maxFanAngle / 2);\r\n          // Calculate horizontal translation for each card\r\n          const translateX = (index - centerIndex) * 15;\r\n\r\n          return (\r\n            <div\r\n              key={index}\r\n              className=\"deck-card\"\r\n              style={{ transform: `rotate(${angle}deg) translateX(${translateX}px)` }}\r\n            >\r\n              {card.rank} {card.suit}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckDisplay;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,WAAWA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC7B;EACA,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;EACxB,MAAMC,SAAS,GAAGF,IAAI,CAACG,MAAM;EAC7B,MAAMC,WAAW,GAAG,CAACF,SAAS,GAAG,CAAC,IAAI,CAAC;EAEvC,oBACEJ,OAAA;IAAKO,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BR,OAAA;MAAAQ,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbZ,OAAA;MAAKO,SAAS,EAAC,YAAY;MAAAC,QAAA,GACxBJ,SAAS,KAAK,CAAC,iBAAIJ,OAAA;QAAAQ,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC1CV,IAAI,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACzB;QACA,MAAMC,KAAK,GAAI,CAACD,KAAK,GAAGT,WAAW,IAAIA,WAAW,IAAKH,WAAW,GAAG,CAAC,CAAC;QACvE;QACA,MAAMc,UAAU,GAAG,CAACF,KAAK,GAAGT,WAAW,IAAI,EAAE;QAE7C,oBACEN,OAAA;UAEEO,SAAS,EAAC,WAAW;UACrBW,KAAK,EAAE;YAAEC,SAAS,EAAE,UAAUH,KAAK,mBAAmBC,UAAU;UAAM,CAAE;UAAAT,QAAA,GAEvEM,IAAI,CAACM,IAAI,EAAC,GAAC,EAACN,IAAI,CAACO,IAAI;QAAA,GAJjBN,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKP,CAAC;MAEV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACU,EAAA,GA9BQrB,WAAW;AAgCpB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}