{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LB\\\\Documents\\\\src\\\\src\\\\components\\\\TableCards.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TableCards({\n  cards,\n  onDragStart\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Table Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      style: {\n        position: 'relative',\n        width: '80px',\n        height: '120px'\n      },\n      children: [cards.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No cards on table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 32\n      }, this), cards.map((card, index) => {\n        if (card.type === 'stack') {\n          // Render only top card of stack\n          const topCard = card.cards[card.cards.length - 1];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            draggable: true,\n            onDragStart: e => {\n              e.dataTransfer.setData('text/plain', JSON.stringify(topCard));\n              onDragStart(topCard);\n            },\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              cursor: 'grab',\n              color: ['♥', '♦'].includes(topCard.suit) ? 'red' : 'black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-rank\",\n              children: topCard.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-suit\",\n              children: topCard.suit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this);\n        } else {\n          // Loose card\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            draggable: true,\n            onDragStart: e => {\n              e.dataTransfer.setData('text/plain', JSON.stringify(card));\n              onDragStart(card);\n            },\n            style: {\n              cursor: 'grab',\n              color: ['♥', '♦'].includes(card.suit) ? 'red' : 'black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-rank\",\n              children: card.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-suit\",\n              children: card.suit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = TableCards;\nexport default TableCards;\nvar _c;\n$RefreshReg$(_c, \"TableCards\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TableCards","cards","onDragStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","width","height","length","map","card","index","type","topCard","draggable","e","dataTransfer","setData","JSON","stringify","top","left","cursor","color","includes","suit","rank","_c","$RefreshReg$"],"sources":["C:/Users/LB/Documents/src/src/components/TableCards.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction TableCards({ cards, onDragStart }) {\r\n  return (\r\n    <div className=\"table-cards\">\r\n      <h3>Table Cards</h3>\r\n      <div className=\"cards-container\" style={{ position: 'relative', width: '80px', height: '120px' }}>\r\n        {cards.length === 0 && <p>No cards on table</p>}\r\n        {cards.map((card, index) => {\r\n          if (card.type === 'stack') {\r\n            // Render only top card of stack\r\n            const topCard = card.cards[card.cards.length - 1];\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"card\"\r\n                draggable\r\n                onDragStart={(e) => {\r\n                  e.dataTransfer.setData('text/plain', JSON.stringify(topCard));\r\n                  onDragStart(topCard);\r\n                }}\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  left: 0,\r\n                  cursor: 'grab',\r\n                  color: ['♥', '♦'].includes(topCard.suit) ? 'red' : 'black',\r\n                }}\r\n              >\r\n                <div className=\"card-rank\">{topCard.rank}</div>\r\n                <div className=\"card-suit\">{topCard.suit}</div>\r\n              </div>\r\n            );\r\n          } else {\r\n            // Loose card\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"card\"\r\n                draggable\r\n                onDragStart={(e) => {\r\n                  e.dataTransfer.setData('text/plain', JSON.stringify(card));\r\n                  onDragStart(card);\r\n                }}\r\n                style={{\r\n                  cursor: 'grab',\r\n                  color: ['♥', '♦'].includes(card.suit) ? 'red' : 'black',\r\n                }}\r\n              >\r\n                <div className=\"card-rank\">{card.rank}</div>\r\n                <div className=\"card-suit\">{card.suit}</div>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableCards;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}